{"version":3,"sources":["views/notifications/alerts/Alerts.js","reusable/DocsLink.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js"],"names":["Alerts","React","useState","visible","setVisible","xs","md","name","color","className","closeButton","show","onShowChange","striped","value","Number","size","onClick","DocsLink","props","text","rest","href","rel","target","memo","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","from","test","_arrayLikeToArray","len","arr2"],"mappings":"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","file":"static/js/34.4414d560.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CLink,\r\n  CProgress,\r\n  CRow\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nconst Alerts = () => {\r\n  const [visible, setVisible] = React.useState(10)\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <DocsLink name=\"CAlert\"/>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert color=\"primary\">\r\n                This is a primary alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"secondary\">\r\n                This is a secondary alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"success\">\r\n                This is a success alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"danger\">\r\n                This is a danger alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"warning\">\r\n                This is a warning alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"info\">\r\n                This is a info alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"light\">\r\n                This is a light alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"dark\">\r\n                This is a dark alert — check it out!\r\n              </CAlert>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <small> use <code>.alert-link</code> to provide links</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert color=\"primary\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a primary alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"secondary\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a secondary alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"success\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a success alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"danger\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a danger alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"warning\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a warning alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"info\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a info alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"light\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a light alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"dark\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a dark alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <small> additional content</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert color=\"success\">\r\n                <h4 className=\"alert-heading\">Well done!</h4>\r\n                <p>\r\n                  Aww yeah, you successfully read this important alert message. This example text is going\r\n                  to run a bit longer so that you can see how spacing within an alert works with this kind\r\n                  of content.\r\n                </p>\r\n                <hr />\r\n                <p className=\"mb-0\">\r\n                  Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n                </p>\r\n              </CAlert>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <small> dismissing</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert\r\n                color=\"info\"\r\n                closeButton\r\n              >\r\n                I am an dismissible alert!\r\n              </CAlert>\r\n              <CAlert\r\n                color=\"warning\"\r\n                show={visible}\r\n                closeButton\r\n                onShowChange={setVisible}\r\n              >\r\n                I will be closed in {visible} seconds!\r\n                <CProgress\r\n                  striped\r\n                  color=\"warning\"\r\n                  value={Number(visible) * 10}\r\n                  size=\"xs\"\r\n                  className=\"mb-3\"\r\n                />\r\n              </CAlert>\r\n\r\n              <CButton color=\"primary\" onClick={() => setVisible(10)}>\r\n                Reset timer\r\n              </CButton>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n","import React from 'react'\r\nimport { CLink } from '@coreui/react'\r\n\r\nconst DocsLink = props => {\r\n  const {\r\n    name,\r\n    text,\r\n    ...rest\r\n  } = props\r\n\r\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\r\n\r\n  return (\r\n    <div className=\"card-header-actions\">\r\n      <CLink \r\n        {...rest}\r\n        href={href}\r\n        rel=\"noreferrer noopener\" \r\n        target=\"_blank\" \r\n        className=\"card-header-action\"  \r\n      >\r\n        <small className=\"text-muted\">{ text || 'docs' }</small>\r\n      </CLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(DocsLink)","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}"],"sourceRoot":""}