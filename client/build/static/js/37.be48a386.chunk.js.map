{"version":3,"sources":["../node_modules/webpack/buildin/module.js","views/charts/MeestChart.js","views/charts/SimpleChart2.js","views/prashant/ModeratorSummary.jsx"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","PrashantChart","state","options","series","options1","series1","a","tokenStr","localStorage","getItem","data","chart","id","xaxis","categories","colors","sts","name","data2","sts1","http","apiUrl","apiEnd","headers","data1","console","log","dailyDataresult","map","n1","Approved","Hold","Rejected","Intl","DateTimeFormat","year","month","day","format","Date","this","setState","Array","monthlyDataresult","Holded","className","type","Component","SimpleChart","user","summaryData","dateTime","modDashboard","MeestChart","SimpleWidgets","lazy","ModeratorSummary","post","code","auth","getCurrentUser","alert","axios","userid","sessionid","removeItem","props","history","push"],"mappings":"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","file":"static/js/37.be48a386.chunk.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React, { Component } from 'react'\r\nimport Chart from 'react-apexcharts'\r\nimport http from \"../prashant/services/httpServices\";\r\nimport apiUrl from \"../prashant/config.json\";\r\nimport element3 from \"../prashant/Element.css\";\r\nimport axios from \"axios\"\r\n\r\n\r\nclass PrashantChart extends Component {\r\n\r\n  state = {\r\n    options: {\r\n\r\n    },\r\n    series: [\r\n\r\n    ]\r\n    ,\r\n    options1: {\r\n\r\n    },\r\n    series1: [\r\n\r\n    ]\r\n  }\r\n  async componentDidMount() {\r\n    const tokenStr = localStorage.getItem(\"token\")\r\n    const data = {\r\n      chart: {\r\n        id: 'apexchart-example'\r\n      },\r\n      xaxis: {\r\n        categories: []\r\n      },\r\n      colors: [\"#41B883\", \"#E46651\", '#FB8833']\r\n    };\r\n    const sts = [\r\n      {\r\n        name: 'Total approve',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Total Reject',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Total Hold',\r\n        data: []\r\n      }\r\n    ]\r\n    const data2 = {\r\n      chart: {\r\n        id: 'apexchart-example'\r\n      },\r\n      xaxis: {\r\n        categories: []\r\n      },\r\n      colors: [\"#41B883\", \"#E46651\", '#FB8833']\r\n    };\r\n    const sts1 = [\r\n      {\r\n        name: 'Total approve',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Total Reject',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Total Hold',\r\n        data: []\r\n      }\r\n    ]\r\n\r\n    const data1 = await http.get(apiUrl.apiEnd + \"/modsummary\", { headers: { \"Authorization\": `Bearer ${tokenStr}` } })\r\n  \r\n    console.log(data1);\r\n    sts[0].data = data1.data[0].dailyDataresult.map(n1 => n1.Approved)\r\n    sts[2].data = data1.data[0].dailyDataresult.map(n1 => n1.Hold)\r\n    sts[1].data = data1.data[0].dailyDataresult.map(n1 => n1.Rejected)\r\n\r\n    data.xaxis.categories = data1.data[0].dailyDataresult.map(n1 => new Intl.DateTimeFormat('en-IN', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(new Date(n1.Date)))\r\n    this.setState({ series: sts, options: data })\r\n    var month = new Array();\r\n    month[0] = \"January\";\r\n    month[1] = \"February\";\r\n    month[2] = \"March\";\r\n    month[3] = \"April\";\r\n    month[4] = \"May\";\r\n    month[5] = \"June\";\r\n    month[6] = \"July\";\r\n    month[7] = \"August\";\r\n    month[8] = \"September\";\r\n    month[9] = \"October\";\r\n    month[10] = \"November\";\r\n    month[11] = \"December\";\r\n\r\n    sts1[0].data = data1.data[0].monthlyDataresult.map(n1 => n1.Approved)\r\n    sts1[1].data = data1.data[0].monthlyDataresult.map(n1 => n1.Rejected)\r\n    sts1[2].data = data1.data[0].monthlyDataresult.map(n1 => n1.Holded)\r\n    data2.xaxis.categories = data1.data[0].monthlyDataresult.map(n1 => month[ n1.month === 0 ? 0:n1.month-1])\r\n    this.setState({ series1: sts1, options1: data2 })\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row mt-5\">\r\n        {this.state.options !== null ?\r\n          <>\r\n            <div className=\"col-md-12 \">\r\n              <h4>Summary Data</h4>\r\n              <hr />\r\n            </div>\r\n\r\n            <div className=\"section col-md-6 element3\">\r\n              <h5 className=\"section-title\">Daily Report</h5>\r\n              <div className=\"section-content\">\r\n                <Chart options={this.state.options} series={this.state.series} type=\"area\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"section col-md-6 element3\">\r\n              <h5 className=\"section-title\">Monthly Report</h5>\r\n              <div className=\"section-content\">\r\n                <Chart options={this.state.options1} series={this.state.series1} type=\"bar\" />\r\n              </div>\r\n            </div></> : \"\"}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PrashantChart;","import React from 'react';\r\nimport \"../prashant/Element.css\";\r\nimport auth from \"../prashant/services/authServices\"\r\nimport axios from \"axios\"\r\nimport apiUrl from \"../prashant/config.json\";\r\n\r\nimport MeestChart from \"./MeestChart\";\r\n//import auth from '../prashant/services/authServices';\r\nimport {\r\n  CCardBody,\r\n  CRow,\r\n  CCol,\r\n\r\n} from '@coreui/react'\r\nimport {\r\n  // CChartBar,\r\n  CChartLine,\r\n  // CChartDoughnut,\r\n  // CChartPie,\r\n} from '@coreui/react-chartjs'\r\nimport { Component } from 'react';\r\n// import { DocsLink } from 'src/reusable'\r\n\r\n\r\nclass SimpleChart extends Component {\r\n  //const user1=auth.getCurrentUser();\r\n  state = {\r\n    user: {},\r\n    summaryData: [],\r\n    dateTime: [],\r\n    modDashboard: []\r\n  }\r\n  \r\n  render() {\r\n    const { summaryData, dateTime, user } = this.state\r\n    return (\r\n    <>\r\n      <MeestChart />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleChart\r\n","import React, { Component, lazy } from 'react';\r\nimport SimpleChart2 from \"../charts/SimpleChart2\";\r\nimport http from \"./services/httpServices\";\r\nimport apiUrl from \"./config.json\";\r\nimport auth from \"./services/authServices\"\r\nimport axios from \"axios\"\r\nconst SimpleWidgets = lazy(() => import('../widgets/SimpleWidgets.js'))\r\n\r\n\r\nclass ModeratorSummary extends Component {\r\n  state = {\r\n    user: {},\r\n    summaryData: [],\r\n    dateTime: [],\r\n    modDashboard: []\r\n  }\r\n  async componentDidMount() {\r\n    const tokenStr = localStorage.getItem(\"token\")\r\n    const response = await http.post(apiUrl.apiEnd + \"/verifyToken\", { headers: { \"Authorization\": `Bearer ${tokenStr}` } })\r\n    // console.log(response.status)\r\n    if (response.data.code === '500') {\r\n      const user = auth.getCurrentUser();\r\n      alert(\"Your session has expire.So please login again\")\r\n      await axios.post(apiUrl.apiEnd + \"/logout\", { userid: user.id, sessionid: user.sessionid })\r\n      localStorage.removeItem(\"token\")\r\n      // this.props.history.push(\"/login\")\r\n      this.props.history.push(\"/dashboard\")\r\n\r\n    }\r\n    else {\r\n      //console.log(response)\r\n    }\r\n    // console.log(response.status)\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        <SimpleWidgets />\r\n        <SimpleChart2 />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModeratorSummary\r\n"],"sourceRoot":""}