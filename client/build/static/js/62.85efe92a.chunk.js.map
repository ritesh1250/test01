{"version":3,"sources":["views/prashant/PrashantChart.js","views/prashant/StackChart.js","views/prashant/Daughhut.js","views/dashboard/Dashboard.js"],"names":["PrashantChart","state","options","series","options1","series1","a","tokenStr","localStorage","getItem","data","chart","id","xaxis","categories","colors","sts","name","data2","sts1","http","get","apiUrl","apiEnd","headers","data1","meestchartdataDailyresult","map","n1","Approved","Hold","Rejected","Intl","DateTimeFormat","year","month","day","format","Date","this","setState","Array","meestchartdataMonthlyyresult","Holded","className","type","Component","getmonth","medleyhartdataDailyresult","medleyhartdataMonthlyresult","setStyle","style","wrap","withStyles","root","Target","classes","restProps","classNames","LegendRoot","display","margin","flexDirection","Legend","Root","LegendLabel","whiteSpace","Label","stacks","region","val","AdminWidgets","React","lazy","Dashboard","approve1","hold","reject","total","date","StackChart"],"mappings":"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","file":"static/js/62.85efe92a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Chart from 'react-apexcharts'\r\nimport http from \"./services/httpServices\"\r\n// import auth from \"./services/authServices\";\r\nimport apiUrl from \"./config.json\";\r\n\r\n\r\nclass PrashantChart extends Component {\r\n\r\n  state = {\r\n    options: {\r\n\r\n    },\r\n    series: [\r\n\r\n    ]\r\n    ,\r\n    options1: {\r\n\r\n    },\r\n    series1: [\r\n\r\n    ]\r\n  }\r\n  async componentDidMount() {\r\n    const tokenStr = localStorage.getItem(\"token\")\r\n    const data = {\r\n      chart: {\r\n        id: 'apexchart-example'\r\n      },\r\n      xaxis: {\r\n        categories: []\r\n      },\r\n      colors: [\"#41B883\", \"#E46651\", '#FB8833']\r\n    };\r\n    // console.log(data.xaxis.categories)\r\n    const sts = [\r\n\r\n      {\r\n        name: 'Approve',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Reject',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Hold',\r\n        data: []\r\n      }\r\n    ]\r\n    const data2 = {\r\n      chart: {\r\n        id: 'apexchart-example'\r\n      },\r\n      xaxis: {\r\n        categories: []\r\n      },\r\n      colors: [\"#41B883\", \"#E46651\", '#FB8833']\r\n    };\r\n    // console.log(data.xaxis.categories)\r\n    const sts1 = [\r\n\r\n      {\r\n        name: 'Approve',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Reject',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Hold',\r\n        data: []\r\n      }\r\n    ]\r\n    // const user1=auth.getCurrentUser();\r\n    \r\n    const data1 = await http.get(apiUrl.apiEnd + \"/getadminChartdata\", { headers: { \"Authorization\": `Bearer ${tokenStr}` } })\r\n\r\n    sts[0].data = data1.data[0].meestchartdataDailyresult.map(n1 => n1.Approved)\r\n    sts[2].data = data1.data[0].meestchartdataDailyresult.map(n1 => n1.Hold)\r\n    sts[1].data = data1.data[0].meestchartdataDailyresult.map(n1 => n1.Rejected)\r\n    data.xaxis.categories = data1.data[0].meestchartdataDailyresult.map(n1 => new Intl.DateTimeFormat('en-IN', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(new Date(n1.Date)))\r\n\r\n    this.setState({ series: sts, options: data })\r\n    var month = new Array();\r\n    month[0] = \"January\";\r\n    month[1] = \"February\";\r\n    month[2] = \"March\";\r\n    month[3] = \"April\";\r\n    month[4] = \"May\";\r\n    month[5] = \"June\";\r\n    month[6] = \"July\";\r\n    month[7] = \"August\";\r\n    month[8] = \"September\";\r\n    month[9] = \"October\";\r\n    month[10] = \"November\";\r\n    month[11] = \"December\";\r\n    // var n = month[d.getMonth()];\r\n\r\n    sts1[0].data = data1.data[0].meestchartdataMonthlyyresult.map(n1 => n1.Approved)\r\n    sts1[1].data = data1.data[0].meestchartdataMonthlyyresult.map(n1 => n1.Rejected)\r\n    sts1[2].data = data1.data[0].meestchartdataMonthlyyresult.map(n1 => n1.Holded)\r\n    data2.xaxis.categories = data1.data[0].meestchartdataMonthlyyresult.map(n1 => month[n1.month - 1])\r\n    this.setState({ series1: sts1, options1: data2 })\r\n\r\n  }\r\n  render() {\r\n    // console.log(this.state.options,this.state.series)\r\n    return (\r\n      <div className=\"row\">\r\n        {this.state.options !== null ?\r\n          <>\r\n            <div className=\"col-md-12\">\r\n              <h2>Meest Summary Data</h2>\r\n            </div>\r\n\r\n            <div className=\"section col-md-6\">\r\n              <h3 className=\"section-title\">Daily Summary</h3>\r\n              <div className=\"section-content\">\r\n                <Chart options={this.state.options} series={this.state.series} type=\"area\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"section col-md-6\">\r\n              <h3 className=\"section-title\">Monthly Report</h3>\r\n              <div className=\"section-content\">\r\n                <Chart options={this.state.options1} series={this.state.series1} type=\"bar\" />\r\n              </div>\r\n            </div></> : \"\"}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PrashantChart;","import React, { Component } from 'react'\r\nimport Chart from 'react-apexcharts'\r\nimport http from \"./services/httpServices\"\r\n// import auth from \"./services/authServices\";\r\nimport apiUrl from \"./config.json\";\r\n\r\n\r\nclass PrashantChart extends Component {\r\n\r\n  state = {\r\n    options: {\r\n\r\n    },\r\n    series: [\r\n\r\n    ]\r\n    ,\r\n    options1: {\r\n\r\n    },\r\n    series1: [\r\n\r\n    ]\r\n  }\r\n  async componentDidMount() {\r\n    const tokenStr = localStorage.getItem(\"token\")\r\n    const data = {\r\n      chart: {\r\n        id: 'apexchart-example'\r\n      },\r\n      xaxis: {\r\n        categories: []\r\n      },\r\n      colors: [\"#41B883\", \"#E46651\", '#FB8833']\r\n    };\r\n    // console.log(data.xaxis.categories)\r\n    const sts = [\r\n\r\n      {\r\n        name: 'Approve',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Reject',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Hold',\r\n        data: []\r\n      }\r\n    ]\r\n    const data2 = {\r\n      chart: {\r\n        id: 'apexchart-example'\r\n      },\r\n      xaxis: {\r\n        categories: []\r\n      },\r\n      colors: [\"#41B883\", \"#E46651\", '#FB8833']\r\n    };\r\n    // console.log(data.xaxis.categories)\r\n    const sts1 = [\r\n\r\n      {\r\n        name: 'Approve',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Reject',\r\n        data: []\r\n      },\r\n      {\r\n        name: 'Hold',\r\n        data: []\r\n      }\r\n    ]\r\n    // const user1=auth.getCurrentUser();\r\n   \r\n    const data1 = await http.get(apiUrl.apiEnd + \"/getadminChartdata\", { headers: { \"Authorization\": `Bearer ${tokenStr}` } })\r\n    sts[0].data = data1.data[0].medleyhartdataDailyresult.map(n1 => n1.Approved)\r\n    sts[2].data = data1.data[0].medleyhartdataDailyresult.map(n1 => n1.Hold)\r\n    sts[1].data = data1.data[0].medleyhartdataDailyresult.map(n1 => n1.Rejected)\r\n    data.xaxis.categories = data1.data[0].medleyhartdataDailyresult.map(n1 => new Intl.DateTimeFormat('en-IN', { year: 'numeric', month: '2-digit', day: '2-digit' }).format(new Date(n1.Date)))\r\n\r\n    this.setState({ series: sts, options: data })\r\n\r\n    function getmonth(n1) {\r\n      if (n1==0){\r\n        return 'January'\r\n      }\r\n      else{\r\n      var month = new Array();\r\n    month[0] = \"January\";\r\n    month[1] = \"February\";\r\n    month[2] = \"March\";\r\n    month[3] = \"April\";\r\n    month[4] = \"May\";\r\n    month[5] = \"June\";\r\n    month[6] = \"July\";\r\n    month[7] = \"August\";\r\n    month[8] = \"September\";\r\n    month[9] = \"October\";\r\n    month[10] = \"November\";\r\n    month[11] = \"December\";\r\n\r\n    return month[n1-1]\r\n      }\r\n    }\r\n\r\n    \r\n    // var n = month[d.getMonth()];\r\n\r\n    sts1[0].data = data1.data[0].medleyhartdataMonthlyresult.map(n1 => n1.Approved)\r\n    sts1[1].data = data1.data[0].medleyhartdataMonthlyresult.map(n1 => n1.Rejected)\r\n    sts1[2].data = data1.data[0].medleyhartdataMonthlyresult.map(n1 => n1.Holded)\r\n    data2.xaxis.categories = data1.data[0].medleyhartdataMonthlyresult.map(n1 => getmonth(n1.month))\r\n    this.setState({ series1: sts1, options1: data2 })\r\n \r\n  }\r\n  render() {\r\n    // console.log(this.state.options,this.state.series)\r\n    return (\r\n      <div className=\"row\">\r\n        {this.state.options !== null ?\r\n          <>\r\n            <div className=\"col-md-12\">\r\n              <h2>Medley Summary Data</h2>\r\n            </div>\r\n\r\n            <div className=\"section col-md-6\">\r\n              <h3 className=\"section-title\">Daily Summary</h3>\r\n              <div className=\"section-content\">\r\n                <Chart options={this.state.options} series={this.state.series} type=\"area\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"section col-md-6\">\r\n              <h3 className=\"section-title\">Monthly Report</h3>\r\n              <div className=\"section-content\">\r\n                <Chart options={this.state.options1} series={this.state.series1} type=\"bar\" />\r\n              </div>\r\n            </div></> : \"\"}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PrashantChart;","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    Chart,\r\n    // ArgumentAxis,\r\n    // ValueAxis,\r\n    PieSeries,\r\n    Title,\r\n    Legend,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\n  import classNames from 'clsx';\r\n  import { withStyles } from '@material-ui/core/styles';\r\nimport { Animation,Stack } from '@devexpress/dx-react-chart';\r\nconst setStyle = (style) => {\r\n    const wrap = withStyles({ root: style });\r\n    return Target => wrap(({ classes, className, ...restProps }) => (\r\n      <Target className={classNames(classes.root, className)} {...restProps} />\r\n    ));\r\n  };\r\n  \r\n  const LegendRoot = setStyle({\r\n    display: 'flex',\r\n    margin: 'auto',\r\n    flexDirection: 'row',\r\n  })(Legend.Root);\r\n  \r\n  const LegendLabel = setStyle({\r\n    whiteSpace: 'nowrap',\r\n  })(Legend.Label);\r\n  \r\n\r\n  // const format = () => tick => tick;\r\n  const stacks = [{\r\n    series: [\"Asia\",\"Africa\",\"Europe\",\"Oceania\"],\r\n  }];\r\nconst data = [\r\n    { region: 'Asia', val: 4119626293 },\r\n    { region: 'Africa', val: 1012956064 },\r\n   \r\n    { region: 'Europe', val: 727082222 },\r\n    { region: 'Oceania', val: 35104756 },\r\n];\r\n\r\nexport default class Daughhut extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { data: chartData } = this.state;\r\n\r\n    return (\r\n      <Paper>\r\n        <Chart\r\n          data={chartData}\r\n        //   rotated\r\n        >\r\n          {/* <ArgumentAxis /> */}\r\n          {/* <ValueAxis max={7} /> */}\r\n\r\n          <PieSeries\r\n            valueField=\"val\"\r\n            argumentField=\"region\"\r\n            innerRadius={0.6}\r\n          />\r\n          \r\n          <Animation />\r\n          <Legend position=\"bottom\" rootComponent={LegendRoot} labelComponent={LegendLabel} />\r\n          <Title text=\"Week wise Data\" />\r\n          <Stack stacks={stacks} />\r\n        </Chart>\r\n        \r\n      </Paper>\r\n    );\r\n  }\r\n}","import React, { Component, lazy } from 'react'\r\nimport {\r\n\r\n  CCol,\r\n  // CProgress,\r\n  CRow,\r\n  // CCallout\r\n} from '@coreui/react'\r\n// import CIcon from '@coreui/icons-react'\r\nimport axios  from \"axios\";\r\n// import auth from \"./services/authServices\";\r\nimport apiUrl from \"../prashant/config.json\";\r\nimport PrashantChart from '../prashant/PrashantChart'\r\nimport StackChart from '../prashant/StackChart'\r\nimport Daughhut from '../prashant/Daughhut'\r\n\r\nconst AdminWidgets = lazy(() => import('../widgets/AdminWidgets.js'))\r\n// const WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\r\n\r\nclass Dashboard extends Component {\r\n  state={\r\n      approve1:\"\",\r\n      hold:\"\",\r\n      reject:\"\",\r\n      total:\"\",\r\n      date:\"\"\r\n  }\r\n \r\n  render(){\r\n  return (\r\n    <>\r\n      <AdminWidgets />\r\n        {/* <CCardBody> */}\r\n      \r\n      \r\n         \r\n          <CCol>\r\n          <PrashantChart />\r\n          </CCol>\r\n          <CCol className=\"mt-5\">\r\n          <StackChart  />\r\n          </CCol>\r\n         \r\n         \r\n          {/* <Daughhut/> */}\r\n         \r\n          {/* </div> */}\r\n        {/* </CCardBody> */}\r\n    </>\r\n  )\r\n  }\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}